{% extends 'base.html.twig' %}

{% block title %}New Student{% endblock %}

{% block body %}
<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <h2 class="mb-4 mt-3">Create New Student</h2>
            {{ form_start(form) }}
            <div class="mb-3">
                <label for="{{ form.name.vars.id }}" class="form-label">Name</label>
                {{ form_widget(form.name, {'attr': {'class': 'form-control'}}) }}
            </div>
            <div class="mb-3">
                <label for="{{ form.address.vars.id }}" class="form-label">Address</label>
                {{ form_widget(form.address, {'attr': {'class': 'form-control'}}) }}
            </div>
            <div class="mb-3">
                <label for="{{ form.contact.vars.id }}" class="form-label">Contact</label>
                {{ form_widget(form.contact, {'attr': {'class': 'form-control'}}) }}
            </div>

            <h2>Experiences</h2>
            <div id="experiences" data-prototype="{{ form_row(form.experiences.vars.prototype)|e }}">
                {% for experience in form.experiences %}
                <div class="mb-3">
                    <label for="{{ experience.startDate.vars.id }}" class="form-label">Start Date</label>
                    {{ form_widget(experience.startDate, {'attr': {'class': 'form-control'}}) }}
                </div>
                <div class="mb-3">
                    <label for="{{ experience.endDate.vars.id }}" class="form-label">End Date</label>
                    {{ form_widget(experience.endDate, {'attr': {'class': 'form-control'}}) }}
                </div>
                <div class="mb-3">
                    <label for="{{ experience.post.vars.id }}" class="form-label">Post</label>
                    {{ form_widget(experience.post, {'attr': {'class': 'form-control'}}) }}
                </div>
                <button type="button" class="btn btn-danger mt-3" data-delete-button>Delete</button>
                {% endfor %}
            </div>

            <button type="button" class="btn btn-primary mt-3" id="add_experience_button">Add Experience</button>

            <h2>Educations</h2>
            <div id="educations" data-prototype="{{ form_row(form.educations.vars.prototype)|e }}">
                {% for education in form.educations %}
                <div class="mb-3">
                    <label for="{{ education.diploma.vars.id }}" class="form-label">Diploma</label>
                    {{ form_widget(education.diploma, {'attr': {'class': 'form-control'}}) }}
                </div>
                <div class="mb-3">
                    <label for="{{ education.date.vars.id }}" class="form-label">Date</label>
                    {{ form_widget(education.date, {'attr': {'class': 'form-control'}}) }}
                </div>
                <button type="button" class="btn btn-danger mt-3" data-delete-button>Delete</button>
                {% endfor %}
            </div>

            <button type="button" class="btn btn-primary mt-3" id="add_education_button">Add Education</button>
            <br>
            <button type="submit" class="btn btn-success mt-3">Submit</button>
            <a href="{{ path('app_student_index') }}" class="btn btn-secondary mt-3">Back to List</a>
            {{ form_end(form) }}
        </div>
    </div>
</div>

<script>
    // JavaScript code to handle adding and removing experiences and educations
    const addExperienceButton = document.getElementById('add_experience_button');
    const experiencesContainer = document.getElementById('experiences');
    let experienceIndex = {{ form.experiences|length }};

    function addExperienceForm() {
        const prototype = experiencesContainer.getAttribute('data-prototype');
        const formHtml = prototype.replace(/__name__/g, experienceIndex);
        experiencesContainer.insertAdjacentHTML('beforeend', formHtml);
        experienceIndex++;
    }

    addExperienceButton.addEventListener('click', addExperienceForm);

    experiencesContainer.addEventListener('click', (event) => {
        if (event.target && event.target.dataset.deleteButton) {
            const experienceForm = event.target.closest('div');
            experienceForm.remove();
        }
    });

    // Add any existing experiences (e.g., when editing a student)
    {% for experienceForm in form.experiences %}
    addExperienceForm();
    {% endfor %}

    const addEducationButton = document.getElementById('add_education_button');
    const educationsContainer = document.getElementById('educations');
    let educationIndex = {{ form.educations|length }};

    function addEducationForm() {
        const prototype = educationsContainer.getAttribute('data-prototype');
        const formHtml = prototype.replace(/__name__/g, educationIndex);
        educationsContainer.insertAdjacentHTML('beforeend', formHtml);
        educationIndex++;
    }

    addEducationButton.addEventListener('click', addEducationForm);

    educationsContainer.addEventListener('click', (event) => {
        if (event.target && event.target.dataset.deleteButton) {
            const educationForm = event.target.closest('div');
            educationForm.remove();
        }
    });

    // Add any existing educations (e.g., when editing a student)
    {% for educationForm in form.educations %}
    addEducationForm();
    {% endfor %}
</script>
{% endblock %}